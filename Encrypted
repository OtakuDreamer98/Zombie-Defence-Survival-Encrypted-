--[[ 
UNIVERSAL AIM ASSIST | Works on any NPC | Smooth + Low-Lag
- Targets any NPC with any BasePart
- Smooth FOV aiming per frame
- Respawn-safe GUI
- Toggle with T or GUI button
]]

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local Player = Players.LocalPlayer
local Camera = workspace.CurrentCamera

local FOV = 120
local AIM_SMOOTH = 0.58
local RAYCASTS_PER_FRAME = 6

-- Drawing FOV
local FOVring = Drawing.new("Circle")
FOVring.Thickness = 2
FOVring.Color = Color3.fromRGB(255,255,255)
FOVring.Filled = false
FOVring.Visible = false
FOVring.Radius = FOV
FOVring.Position = Camera.ViewportSize / 2

local aimbotEnabled = false
local validNPCs, visibleNPCs = {}, {}
local rayIndex = 1
local hbConn
local rayParams = RaycastParams.new()
rayParams.FilterType = Enum.RaycastFilterType.Blacklist
rayParams.IgnoreWater = true

-- GUI
local function createGUI()
	local gui = Instance.new("ScreenGui")
	gui.Name = "AimAssistGUI"
	gui.ResetOnSpawn = false
	gui.IgnoreGuiInset = true
	gui.Parent = Player:WaitForChild("PlayerGui")

	local button = Instance.new("TextButton")
	button.Size = UDim2.new(0, 140, 0, 40)
	button.Position = UDim2.new(0, 10, 0, 70)
	button.Text = "AIMASSIST: OFF"
	button.BackgroundColor3 = Color3.fromRGB(30,30,30)
	button.TextColor3 = Color3.fromRGB(255,50,50)
	button.Font = Enum.Font.GothamBold
	button.TextSize = 14
	button.AutoButtonColor = true
	button.Parent = gui

	local dragging, dragStart, startPos
	button.InputBegan:Connect(function(input)
		if input.UserInputType==Enum.UserInputType.MouseButton1 then
			dragging = true
			dragStart = input.Position
			startPos = button.Position
			input.Changed:Connect(function()
				if input.UserInputState==Enum.UserInputState.End then dragging=false end
			end)
		end
	end)
	button.InputChanged:Connect(function(input)
		if input.UserInputType==Enum.UserInputType.MouseMovement and dragging then
			local delta = input.Position - dragStart
			button.Position = UDim2.new(
				startPos.X.Scale,startPos.X.Offset+delta.X,
				startPos.Y.Scale,startPos.Y.Offset+delta.Y
			)
		end
	end)

	return gui, button
end

local gui, toggleButton = createGUI()

-- NPC detection
local function isNPC(model)
	if not model or not model:IsA("Model") then return false end
	local hum = model:FindFirstChildWhichIsA("Humanoid", true)
	if not hum or hum.Health <= 0 then return false end
	if Players:GetPlayerFromCharacter(model) then return false end
	return true
end

-- Aim part: Head > HumanoidRootPart > any BasePart
local function getAimPart(model)
	for _, name in ipairs({"Head","HumanoidRootPart"}) do
		local p = model:FindFirstChild(name,true)
		if p and p:IsA("BasePart") then return p end
	end
	for _, part in ipairs(model:GetDescendants()) do
		if part:IsA("BasePart") then return part end
	end
end

local function predictPos(model)
	local part = getAimPart(model)
	if not part then return nil end
	return part.Position + (part.Velocity or Vector3.zero)*0.02
end

local function getModel(inst)
	while inst and not inst:IsA("Model") do inst = inst.Parent end
	return inst
end

local function isVisible(model,pos)
	if not pos then return false end
	rayParams.FilterDescendantsInstances = {Player.Character}
	local origin = Camera.CFrame.Position
	local dir = pos - origin
	local ray = workspace:Raycast(origin,dir,rayParams)
	if not ray then return true end
	local hitModel = getModel(ray.Instance)
	return hitModel == model or ray.Instance:IsDescendantOf(model)
end

-- Track NPCs dynamically anywhere
local function addNPC(npc)
	if not table.find(validNPCs,npc) then table.insert(validNPCs,npc) end
end

local function removeNPC(npc)
	for i=#validNPCs,1,-1 do if validNPCs[i]==npc then table.remove(validNPCs,i) end end
	for i=#visibleNPCs,1,-1 do if visibleNPCs[i]==npc then table.remove(visibleNPCs,i) end end
end

-- Initial scan
for _, obj in ipairs(workspace:GetDescendants()) do
	if isNPC(obj) then addNPC(obj) end
end

workspace.DescendantAdded:Connect(function(obj)
	if isNPC(obj) then addNPC(obj) end
end)

workspace.DescendantRemoving:Connect(function(obj)
	if isNPC(obj) then removeNPC(obj) end
end)

-- Batch raycast for visible NPCs
local function batchRaycast()
	if #validNPCs==0 then return end
	for i=1,RAYCASTS_PER_FRAME do
		if rayIndex>#validNPCs then rayIndex=1 end
		local npc = validNPCs[rayIndex]
		if npc and npc.Parent and isNPC(npc) then
			local pos = predictPos(npc)
			if pos and isVisible(npc,pos) then
				if not table.find(visibleNPCs,npc) then table.insert(visibleNPCs,npc) end
			else
				for idx=#visibleNPCs,1,-1 do
					if visibleNPCs[idx]==npc then table.remove(visibleNPCs,idx) end
				end
			end
		end
		rayIndex = rayIndex+1
	end
end

-- Closest target in FOV
local function getClosest()
	local center=Camera.ViewportSize/2
	local best,minDist=nil,math.huge
	for _, npc in ipairs(visibleNPCs) do
		local pos = predictPos(npc) or getAimPart(npc) and getAimPart(npc).Position
		if pos then
			local screen,onScreen=Camera:WorldToViewportPoint(pos)
			if onScreen and screen.Z>0 then
				local dist=(Vector2.new(screen.X,screen.Y)-center).Magnitude
				if dist<FOV and dist<minDist then
					minDist=dist
					best=npc
				end
			end
		end
	end
	return best
end

-- Aim function
local function aimAt(pos)
	local cf=Camera.CFrame
	local newDir=cf.LookVector:Lerp((pos-cf.Position).Unit,AIM_SMOOTH)
	Camera.CFrame=CFrame.new(cf.Position,cf.Position+newDir)
end

-- Start / stop
local function startAimbot()
	if hbConn then return end
	FOVring.Visible=true
	hbConn = RunService.Heartbeat:Connect(function()
		FOVring.Position=Camera.ViewportSize/2
		FOVring.Radius=FOV*(Camera.ViewportSize.Y/1080)
		batchRaycast()
		local target=getClosest()
		if target then
			local pos = predictPos(target) or getAimPart(target).Position
			if pos then aimAt(pos) end
		end
	end)
end

local function stopAimbot()
	if hbConn then hbConn:Disconnect() hbConn=nil end
	FOVring.Visible=false
	visibleNPCs={}
end

-- Toggle
local function toggle()
	aimbotEnabled = not aimbotEnabled
	if aimbotEnabled then startAimbot() else stopAimbot() end
	toggleButton.Text = "AIMASSIST: "..(aimbotEnabled and "ON" or "OFF")
	toggleButton.TextColor3 = aimbotEnabled and Color3.fromRGB(50,255,50) or Color3.fromRGB(255,50,50)
end

toggleButton.MouseButton1Click:Connect(toggle)
UserInputService.InputBegan:Connect(function(input,gp)
	if not gp and input.KeyCode==Enum.KeyCode.T then toggle() end
end)

-- GUI respawn safe
Player.CharacterAdded:Connect(function()
	task.wait(1)
	if not gui or not gui.Parent then
		gui,toggleButton=createGUI()
		toggleButton.MouseButton1Click:Connect(toggle)
	end
end)

Players.PlayerRemoving:Connect(function(plr)
	if plr==Player then pcall(function() FOVring:Remove() end) end
end)

print("[âœ… Fully Universal Aim Assist Loaded | Works on Any NPC]")
